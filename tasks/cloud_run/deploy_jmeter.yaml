version: '3'

includes:
  git:
    taskfile: "../common/git.yaml"
  docker:
    taskfile: "../common/docker.yaml"
  gcloud_config: 
    taskfile: "../gcloud/config.yaml"
  gcloud_services: 
    taskfile: "../gcloud/services.yaml"
  gcloud_auth: 
    taskfile: "../gcloud/auth.yaml"
  gcloud_artifacts_repositories: 
    taskfile: "../gcloud/artifacts_repositories.yaml"
  gcloud_run: 
    taskfile: "../gcloud/run.yaml"

vars:
  _AR_DOCKER_SUFFIX: 'docker.pkg.dev'
  _JMETER_IMAGE_NAME: 'jmeter-test-executor'

tasks:

  clone_git_repo:
    requires:
      vars: [GIT_REPO_URL, GIT_REPO_DIR]
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - task: git:clone

  set_gcp_project:
    requires:
      vars: [GCP_PROJECT]
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - task: gcloud_config:set_project

  enable_services:
    requires:
      vars: [GCP_PROJECT, GCP_SERVICES]
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - task: gcloud_services:enable
        vars:
          SERVICES: '{{.GCP_SERVICES}}'

  create_docker_repository:
    requires: 
      vars: [GCP_PROJECT, AR_LOCATION, AR_REPO]
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - task: gcloud_artifacts_repositories:create_if_not_exists
        vars:
          REPO_NAME: '{{.AR_REPO}}'
          REPO_LOCATION: '{{.AR_LOCATION}}'
          REPO_FORMAT: docker
          REPO_DESCRIPTION: "Docker repository"

  authorize_docker:
    requires: 
      vars: [GCP_PROJECT, AR_LOCATION]
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      _REPO_HOST: '{{.AR_LOCATTION}}-{{._AR_DOCKER_SUFFIX}}'
    cmds:
      - task: gcloud_auth:configure_docker
        vars:
          REPO_HOST: '{{._REPO_HOST}}'

  build_container_image:
    requires:
      vars: [GCP_PROJECT, AR_LOCATION, AR_REPO]
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - task: docker:build_image_no_cache
        vars:
          IMAGE_TAG: '{{.AR_LOCATTION}}-{{._AR_DOCKER_SUFFIX}}/{{.GCP_PROJECT}}/{{.AR_REPO}}/{{._JMETER_IMAGE_NAME}}'

  push_container_image:
    requires:
      vars: [GCP_PROJECT, AR_LOCATION, AR_REPO]
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      _REPO_HOST: '{{.AR_LOCATTION}}-{{._AR_DOCKER_SUFFIX}}'
    cmds: 
      - task: docker:push_image
        vars:
          IMAGE_TAG: '{{.AR_LOCATTION}}-{{._AR_DOCKER_SUFFIX}}/{{.GCP_PROJECT}}/{{.AR_REPO}}/{{._JMETER_IMAGE_NAME}}'

  deploy_run_revision:
    requires:
      vars: [GCP_PROJECT, RUN_SERVICE, RUN_REGION]
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - task: gcloud_run:deploy_container_image
        vars:
          MAX_INSTANCES: 1
          MIN_INSTANCES: 0
          CPU_BOOST: no
          CPU_THROTTLE: no
          SSN_AFFINITTY: yes
          GENERATION: 2
          TIMEOUT: 1h
          PORT: 8080
          CPU: 2
          MEMORY: 2Gi
          IMAGE_TAG: '{{.AR_LOCATTION}}-{{._AR_DOCKER_SUFFIX}}/{{.GCP_PROJECT}}/{{.AR_REPO}}/{{._JMETER_IMAGE_NAME}}'

  describe_run_revision:
    requires:
      vars: [GCP_PROJECT, RUN_SERVICE, RUN_REGION]
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - task: gcloud_run:run_services:describe
        vars:
          FORMAT: flattened

